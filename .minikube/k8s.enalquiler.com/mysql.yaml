---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: symfony-demo-database-persistent-volume
  namespace: symfony-demo
  labels:
    app: symfony-demo
    env: prod
    volume: symfony-demo-database-persistent-volume
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/var/lib/mysql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: symfony-demo-database-persistent-volume-claim
  namespace: symfony-demo
  labels:
    app: symfony-demo-mysql-persistent-volume-claim
    env: prod
spec:
  resources:
    requests:
      storage: 5Gi
  accessModes:
    - ReadWriteMany
  selector:
    matchLabels:
      app: symfony-demo
      env: prod
      volume: symfony-demo-database-persistent-volume
---
apiVersion: extensions/v1beta1
kind: ReplicaSet
metadata:
  name: mysql-rs
  namespace: symfony-demo
  labels:
    app: symfony-demo
    env: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: symfony-demo-mysql
      component: database
      env: prod
  template:
    metadata:
      namespace: symfony-demo
      labels:
        app: symfony-demo-mysql
        component: database
        env: prod
    spec:
      containers:
      - name: symfony-demo-mysql
        image: mysql:5
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: symfony-demo-mysql-root-password
              key: password
        - name: MYSQL_DATABASE
          value: symfony_demo
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: symfony-demo-mysql-user
              key: user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: symfony-demo-mysql-password
              key: password
        ports:
        - containerPort: 3306
        volumeMounts:
          - name: database
            mountPath: "/var/lib/mysql"
      volumes:
      - name: database
        persistentVolumeClaim:
          claimName: symfony-demo-database-persistent-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: symfony-demo-mysql-service
  namespace: symfony-demo
  labels:
    app: symfony-demo
    env: prod
spec:
  selector:
    app: symfony-demo-mysql
    component: database
    env: prod
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306