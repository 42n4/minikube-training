---
apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod
  labels:
    app.kubernetes.io/name: minikube.training
    env: prod
spec:
  containers:
    - image: enalquilertrainings/minikube-training-nginx
      name: minikube-training-nginx
      ports:
        - containerPort: 80
          name: http
          protocol: TCP
  imagePullSecrets:
    - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: minikube.training
    env: prod
spec:
  selector:
    name: nginx-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  name: php-pod
  labels:
    app.kubernetes.io/name: minikube.training
    env: prod
spec:
  containers:
    - image: enalquilertrainings/minikube-training-php
      name: minikube-training-php
      volumeMounts:
        - name: database-url
          mountPath: /run/secrets/database-url
          readOnly: true
        - name: app-secret
          mountPath: /run/secrets/app-secrets
          readOnly: true
  volumes:
    - name: database-url
      secret:
        secretName: database-url
    - name: app-secret
      secret:
        secretName: app-secret
  imagePullSecrets:
    - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: php
  labels:
    app.kubernetes.io/name: minikube.training
    env: prod
spec:
  selector:
    name: php-pod
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  name: mailhog-pod
  labels:
    app.kubernetes.io/name: minikube.training
    env: prod
spec:
  containers:
    - image: mailhog/mailhog
      name: mailhog
      ports:
        - containerPort: 8025
          name: http
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: mailhog
  labels:
    app.kubernetes.io/name: minikube.training
    env: prod
spec:
  selector:
    name: mailhog-pod
  ports:
    - protocol: TCP
      port: 8025
      targetPort: 8025
  type: NodePort